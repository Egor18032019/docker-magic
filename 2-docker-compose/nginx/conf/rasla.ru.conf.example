### HTTP ###
###
server {
  server_name rasla.ru;
  listen 80;
  listen [::]:80;

  access_log off;
  error_log  /dev/null crit;

  root  /var/www/html;

## ALLOW Let's Encrypt HTTP-01 verification
  location ^~ /.well-known/ {
    allow  all;
  }

## ALL another - redirect to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

### HTTPS ###
###
server {
  listen 443 ssl;  # http2 - 1.9.5-1.25.0
  listen 443 quic;  # quic - 1.25.1+
  listen [::]:443 ssl;  # http2 - 1.9.5-1.25.0
  listen [::]:443 quic;
 add_header Alt-Svc 'h3=":443"; ma=86400';  # quic
  server_name  rasla.ru;

  access_log /var/log/nginx/rasla.ru-access.log  combined  buffer=8k flush=1s;  # if=$loggable;
  error_log  /var/log/nginx/rasla.ru-error.log   error;

  root   /var/www/html;

  include conf.d/_tls-12.config;
  include conf.d/_tls-hsts.config;
  include conf.d/_tls-xss-block.config;

  ssl_certificate_key     /etc/letsencrypt/live/rasla.ru/privkey.pem;
  ssl_certificate         /etc/letsencrypt/live/rasla.ru/fullchain.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/rasla.ru/chain.pem;

  location = /healthz {
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    access_log off;
    default_type text/plain;
    return 200;
  }

  location = /status_frontend {
    stub_status on;
#    access_log  off;
#    allow 176.215.12.95;
#    deny all;
  }

# DENY access to .htaccess / .gitignore / .{any_file_starting_with_dot}
  location ~ /\. {
    deny  all;
    access_log off;
  }

  location / {
    proxy_pass http://upstream-124;
    proxy_http_version 1.1;         # for upstream keepalive
    proxy_set_header Connection ""; # for 'proxy_http_version'
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP   $remote_addr;
    # Tuning
    client_max_body_size 10m;
    proxy_connect_timeout 2;
    proxy_read_timeout 30;
  }
}
